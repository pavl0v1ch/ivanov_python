# Определяется функция merge_sorted_list, которая принимает два отсортированных списка.
# Цель — объединить их в один отсортированный список без использования встроенных функций сортировки.
def merge_sorted_list(list1, list2):
    i = j = 0  # Инициализируются индексы для прохода по обоим спискам.
    result = []  # Создаётся пустой список для хранения результата слияния.

    # Пока оба индекса находятся в пределах своих списков:
    # сравниваются текущие элементы, и меньший добавляется в результат.
    while i < len(list1) and j < len(list2):
        if list1[i] <= list2[j]:
            result.append(list1[i])  # Добавляется элемент из первого списка.
            i += 1  # Индекс первого списка увеличивается.
        else:
            result.append(list2[j])  # Добавляется элемент из второго списка.
            j += 1  # Индекс второго списка увеличивается.

    # После завершения основного цикла:
    # если остались элементы в первом списке они добавляются в конец результата.
    while i < len(list1):
        result.append(list1[i])
        i += 1

    # То же самое для второго списка.
    while j < len(list2):
        result.append(list2[j])
        j += 1

    return result  # Возвращается объединённый отсортированный список.



if __name__ == "__main__":
    a = [1, 3, 5, 7]  # Первый отсортированный список.
    b = [2, 4, 6, 8]  # Второй отсортированный список.

    # Вызывается функция слияния.
    merged = merge_sorted_list(a, b)


    print(f"Слияние отсортированных списков: {merged}")
