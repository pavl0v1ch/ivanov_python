# Определяется функция flatten_list, которая принимает список lst.
# Цель функции преобразовать вложенный список в плоский, то есть без вложенных уровней.
def flatten_list(lst):
    i = 0  # Инициализируется индекс для прохода по списку

    # Цикл продолжается, пока индекс меньше длины списка.
    while i < len(lst):

        # Проверяется, является ли текущий элемент вложенным списком.
        if isinstance(lst[i], list):

            # Вложенный список извлекается из основного списка методом pop().
            sub = lst.pop(i)

            # Элементы вложенного списка вставляются обратно в основной список,
            # начиная с конца, чтобы сохранить порядок при вставке.
            for j in range(len(sub) - 1, -1, -1):
                lst.insert(i, sub[j])

            # Индекс не увеличивается, чтобы обработать новые элементы на той же позиции.
        else:
            i += 1  # Если элемент не список — переходим к следующему


# Проверяется, что код выполняется как основной модуль.
if __name__ == "__main__":
    # Создаётся список с вложенными элементами разной глубины.
    list_a = [1, 2, 3, [4], 5, [6, [7, [], 8, [9]]]]

    # Вызывается функция flatten_list для преобразования списка в плоский.
    flatten_list(list_a)


    print(f"Плоский список: {list_a}")
